plugins {
  id 'java-library'
  id 'maven-publish'
  id 'jacoco'
  id 'checkstyle'
  id 'org.sonarqube' version '3.3'
  id 'idea'
}

group = 'it.tccr.jseq'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '15'

repositories {
  mavenCentral()
  maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

java {
  withSourcesJar()
}

ext.versions = [
  vavrVersion: "0.10.4",
  jacksonVersion: "2.13.2",
  logbackVersion: "1.2.11",
  lombokVersion: "1.18.22",
  commonsLang3Version: "3.12.0",
  junitVersion: "5.8.2",
  mockitoVersion: "4.3.1",
  assertJVersion: "3.22.0",
  assertJVavrVersion: "0.4.2",
  checkstyleVersion: "8.39"
]

dependencies {
  implementation "io.vavr:vavr:${versions.vavrVersion}"
  implementation "com.fasterxml.jackson.core:jackson-core:${versions.jacksonVersion}"
  implementation "com.fasterxml.jackson.core:jackson-databind:${versions.jacksonVersion}"
  implementation "org.apache.commons:commons-lang3:${versions.commonsLang3Version}"
  implementation "ch.qos.logback:logback-classic:${versions.logbackVersion}"
  compileOnly "org.projectlombok:lombok:${versions.lombokVersion}"

  annotationProcessor "org.projectlombok:lombok:${versions.lombokVersion}"

  testCompileOnly "org.projectlombok:lombok:${versions.lombokVersion}"
  testAnnotationProcessor "org.projectlombok:lombok:${versions.lombokVersion}"

  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${versions.junitVersion}"
  testImplementation "org.junit.jupiter:junit-jupiter-api:${versions.junitVersion}"
  testImplementation "org.junit.jupiter:junit-jupiter-params:${versions.junitVersion}"
  testImplementation "org.mockito:mockito-core:${versions.mockitoVersion}"
  testImplementation "org.mockito:mockito-junit-jupiter:${versions.mockitoVersion}"
  testImplementation "org.assertj:assertj-core:${versions.assertJVersion}"
  testImplementation "org.assertj:assertj-vavr:${versions.assertJVavrVersion}"
}

jacoco {
  toolVersion = '0.8.7'
}

tasks.withType(Test) {
  finalizedBy jacocoTestReport
}

jacocoTestReport {
  reports {
    xml.enabled true
    csv.enabled false
    html.enabled true
    html.destination file("${buildDir}/reports/jacocoHtml")
  }
}

test {
  useJUnitPlatform()
  jacoco {
    destinationFile = file("$buildDir/jacoco/${name}.exec")
  }
  testLogging {
    events "failed"
    exceptionFormat "full"
    showStandardStreams = true
  }
}

checkstyle {
  toolVersion = "${versions.checkstyleVersion}"
}
checkstyleMain.source = "src/main/java"
checkstyleTest.source = "src/test/java"

sonarqube {
  properties {
    property "sonar.projectKey", "gilbertotcc_jseq"
    property "sonar.organization", "gilbertotcc-github"
    property "sonar.host.url", "https://sonarcloud.io"
  }
}

publishing {
  repositories {
    maven {
      name = "GitHubPackages"
      def repoBaseUrl = 'https://maven.pkg.github.com/gilbertotcc/jseq'
      def releasesRepoUrl = layout.buildDirectory.dir("$repoBaseUrl/releases")
      def snapshotsRepoUrl = layout.buildDirectory.dir("$repoBaseUrl/snapshots")
      url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
      credentials {
        username = System.getenv("GITHUB_ACTOR")
        password = System.getenv("GITHUB_TOKEN")
      }
    }
  }

  publications {
    gpr(MavenPublication) {
      from components.java
    }
  }
}
