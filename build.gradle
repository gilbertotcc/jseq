plugins {
  id 'java-library'
  id 'jacoco'
  id 'checkstyle'
  id 'idea'
}

group = 'it.tccr.jseq'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '15'

repositories {
  mavenCentral()
  maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

java {
  withSourcesJar()
}

ext.versions = [
  vavrVersion: "0.10.4",
  logbackVersion: "1.2.6",
  lombokVersion: "1.18.22",
  junitVersion: "5.8.1",
  mockitoVersion: "4.0.0",
  assertJVersion: "3.21.0",
  checkstyleVersion: "8.39"
]

dependencies {

  // This dependency is exported to consumers, that is to say found on their compile classpath.
  api 'org.apache.commons:commons-math3:3.6.1'

  // This dependency is used internally, and not exposed to consumers on their own compile classpath.
  implementation 'com.google.guava:guava:31.0.1-jre'

  implementation "io.vavr:vavr:${versions.vavrVersion}"
  implementation "ch.qos.logback:logback-classic:${versions.logbackVersion}"
  compileOnly "org.projectlombok:lombok:${versions.lombokVersion}"

  annotationProcessor "org.projectlombok:lombok:${versions.lombokVersion}"

  testCompileOnly "org.projectlombok:lombok:${versions.lombokVersion}"
  testAnnotationProcessor "org.projectlombok:lombok:${versions.lombokVersion}"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${versions.junitVersion}"
  testImplementation "org.junit.jupiter:junit-jupiter-api:${versions.junitVersion}"
  testImplementation "org.junit.jupiter:junit-jupiter-params:${versions.junitVersion}"
  testImplementation "org.mockito:mockito-core:${versions.mockitoVersion}"
  testImplementation "org.mockito:mockito-junit-jupiter:${versions.mockitoVersion}"
  testImplementation "org.assertj:assertj-core:${versions.assertJVersion}"
}

jacoco {
  toolVersion = '0.8.7'
}

tasks.withType(Test) {
  finalizedBy jacocoTestReport
}

jacocoTestReport {
  reports {
    xml.enabled true
    csv.enabled false
    html.enabled true
    html.destination file("${buildDir}/reports/jacocoHtml")
  }
}

test {
  useJUnitPlatform()
  jacoco {
    destinationFile = file("$buildDir/jacoco/${name}.exec")
  }
  testLogging {
    events "failed"
    exceptionFormat "full"
    showStandardStreams = true
  }
}

checkstyle {
  toolVersion = "${versions.checkstyleVersion}"
}
checkstyleMain.source = "src/main/java"
checkstyleTest.source = "src/test/java"
